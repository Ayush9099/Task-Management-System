{"ast":null,"code":"import axios from 'axios';\nconst baseURL = 'http://localhost:9900';\nconst api = axios.create({\n  baseURL\n});\nexport const registerUser = async userData => {\n  try {\n    const response = await api.post('/users/signup', userData);\n    window.location.reload(); // Reload the page after successful operation\n    return response.data;\n  } catch (error) {\n    throw error;\n  }\n};\nexport const loginUser = async userData => {\n  try {\n    const response = await api.post('/users/login', userData);\n    window.location.reload(); // Reload the page after successful operation\n    return response.data;\n  } catch (error) {\n    throw error;\n  }\n};\nexport const logOutUser = async () => {\n  try {\n    const token = localStorage.getItem(\"token\");\n    const response = await api.post('/users/logout', {}, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    window.location.reload(); // Reload the page after successful operation\n    return response.data;\n  } catch (error) {\n    throw error;\n  }\n};\nexport const fetchUserProfile = async () => {\n  try {\n    const token = localStorage.getItem(\"token\");\n    const response = await api.get('/users/user', {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    return response.data;\n  } catch (error) {\n    throw error;\n  }\n};\nexport const updateProfileInfo = async profileData => {\n  try {\n    const token = localStorage.getItem(\"token\");\n    const response = await api.put('/users/update', profileData, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    window.location.reload(); // Reload the page after successful operation\n    return response.data;\n  } catch (error) {\n    throw error;\n  }\n};\nexport const fetchUserTasks = async () => {\n  try {\n    const token = localStorage.getItem(\"token\");\n    const response = await api.get('/tasks/gettask', {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    return response.data.tasks;\n  } catch (error) {\n    throw error;\n  }\n};\nexport const fetchUserSingleTasks = async id => {\n  try {\n    const token = localStorage.getItem(\"token\");\n    const response = await api.get(`/tasks/gettask/${id}`, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    return response.data.tasks;\n  } catch (error) {\n    throw error;\n  }\n};\nexport const createUserTasks = async taskData => {\n  try {\n    const token = localStorage.getItem(\"token\");\n    const response = await api.post('/tasks/create', taskData, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    window.location.reload(); // Reload the page after successful operation\n    return response.data.tasks;\n  } catch (error) {\n    throw error;\n  }\n};\nexport const updateUserTask = async (taskData, id) => {\n  try {\n    const token = localStorage.getItem(\"token\");\n    const response = await api.put(`/tasks/update/${id}`, taskData, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    window.location.reload(); // Reload the page after successful operation\n    return response.data.tasks;\n  } catch (error) {\n    throw error;\n  }\n};\nexport const deleteUserTask = async id => {\n  try {\n    const token = localStorage.getItem(\"token\");\n    const response = await api.delete(`/tasks/delete/${id}`, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    window.location.reload(); // Reload the page after successful operation\n    return response.data.tasks;\n  } catch (error) {\n    throw error;\n  }\n};","map":{"version":3,"names":["axios","baseURL","api","create","registerUser","userData","response","post","window","location","reload","data","error","loginUser","logOutUser","token","localStorage","getItem","headers","Authorization","fetchUserProfile","get","updateProfileInfo","profileData","put","fetchUserTasks","tasks","fetchUserSingleTasks","id","createUserTasks","taskData","updateUserTask","deleteUserTask","delete"],"sources":["C:/react company/To-do-list/task-management-frontend/src/Services/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst baseURL = 'http://localhost:9900';\r\n\r\nconst api = axios.create({\r\n  baseURL,\r\n});\r\n\r\nexport const registerUser = async (userData) => {\r\n  try {\r\n    const response = await api.post('/users/signup', userData);\r\n    window.location.reload(); // Reload the page after successful operation\r\n    return response.data;\r\n  } catch (error) {\r\n    \r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const loginUser = async (userData) => {\r\n  try {\r\n    const response = await api.post('/users/login', userData);\r\n    window.location.reload(); // Reload the page after successful operation\r\n    return response.data;\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const logOutUser = async () => {\r\n  try {\r\n    const token = localStorage.getItem(\"token\");\r\n    const response = await api.post('/users/logout', {}, {\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    });\r\n    window.location.reload(); // Reload the page after successful operation\r\n    return response.data;\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const fetchUserProfile = async () => {\r\n  try {\r\n    const token = localStorage.getItem(\"token\");\r\n    const response = await api.get('/users/user', {\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    });\r\n    return response.data;\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const updateProfileInfo = async (profileData) => {\r\n  try {\r\n    const token = localStorage.getItem(\"token\");\r\n    const response = await api.put('/users/update', profileData , {\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    });\r\n    window.location.reload(); // Reload the page after successful operation\r\n    return response.data;\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const fetchUserTasks = async () => {\r\n  try {\r\n    const token = localStorage.getItem(\"token\");\r\n    const response = await api.get('/tasks/gettask', {\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    });\r\n    return response.data.tasks;\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const fetchUserSingleTasks = async (id) => {\r\n  try {\r\n    const token = localStorage.getItem(\"token\");\r\n    const response = await api.get(`/tasks/gettask/${id}`, {\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    });\r\n    return response.data.tasks;\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const createUserTasks = async (taskData) => {\r\n  try {\r\n    const token = localStorage.getItem(\"token\");\r\n    const response = await api.post('/tasks/create', taskData ,{\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    });\r\n    window.location.reload(); // Reload the page after successful operation\r\n    return response.data.tasks;\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const updateUserTask = async (taskData , id) => {\r\n  try {\r\n    const token = localStorage.getItem(\"token\");\r\n    const response = await api.put(`/tasks/update/${id}`, taskData ,{\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    });\r\n    window.location.reload(); // Reload the page after successful operation\r\n    return response.data.tasks;\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const deleteUserTask = async (id) => {\r\n  try {\r\n    const token = localStorage.getItem(\"token\");\r\n    const response = await api.delete(`/tasks/delete/${id}` ,{\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    });\r\n    window.location.reload(); // Reload the page after successful operation\r\n    return response.data.tasks;\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n};\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAG,uBAAuB;AAEvC,MAAMC,GAAG,GAAGF,KAAK,CAACG,MAAM,CAAC;EACvBF;AACF,CAAC,CAAC;AAEF,OAAO,MAAMG,YAAY,GAAG,MAAOC,QAAQ,IAAK;EAC9C,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMJ,GAAG,CAACK,IAAI,CAAC,eAAe,EAAEF,QAAQ,CAAC;IAC1DG,MAAM,CAACC,QAAQ,CAACC,MAAM,CAAC,CAAC,CAAC,CAAC;IAC1B,OAAOJ,QAAQ,CAACK,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IAEd,MAAMA,KAAK;EACb;AACF,CAAC;AAED,OAAO,MAAMC,SAAS,GAAG,MAAOR,QAAQ,IAAK;EAC3C,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMJ,GAAG,CAACK,IAAI,CAAC,cAAc,EAAEF,QAAQ,CAAC;IACzDG,MAAM,CAACC,QAAQ,CAACC,MAAM,CAAC,CAAC,CAAC,CAAC;IAC1B,OAAOJ,QAAQ,CAACK,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACd,MAAMA,KAAK;EACb;AACF,CAAC;AAED,OAAO,MAAME,UAAU,GAAG,MAAAA,CAAA,KAAY;EACpC,IAAI;IACF,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAC3C,MAAMX,QAAQ,GAAG,MAAMJ,GAAG,CAACK,IAAI,CAAC,eAAe,EAAE,CAAC,CAAC,EAAE;MACnDW,OAAO,EAAE;QACPC,aAAa,EAAE,UAAUJ,KAAK;MAChC;IACF,CAAC,CAAC;IACFP,MAAM,CAACC,QAAQ,CAACC,MAAM,CAAC,CAAC,CAAC,CAAC;IAC1B,OAAOJ,QAAQ,CAACK,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACd,MAAMA,KAAK;EACb;AACF,CAAC;AAED,OAAO,MAAMQ,gBAAgB,GAAG,MAAAA,CAAA,KAAY;EAC1C,IAAI;IACF,MAAML,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAC3C,MAAMX,QAAQ,GAAG,MAAMJ,GAAG,CAACmB,GAAG,CAAC,aAAa,EAAE;MAC5CH,OAAO,EAAE;QACPC,aAAa,EAAE,UAAUJ,KAAK;MAChC;IACF,CAAC,CAAC;IACF,OAAOT,QAAQ,CAACK,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACd,MAAMA,KAAK;EACb;AACF,CAAC;AAED,OAAO,MAAMU,iBAAiB,GAAG,MAAOC,WAAW,IAAK;EACtD,IAAI;IACF,MAAMR,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAC3C,MAAMX,QAAQ,GAAG,MAAMJ,GAAG,CAACsB,GAAG,CAAC,eAAe,EAAED,WAAW,EAAG;MAC5DL,OAAO,EAAE;QACPC,aAAa,EAAE,UAAUJ,KAAK;MAChC;IACF,CAAC,CAAC;IACFP,MAAM,CAACC,QAAQ,CAACC,MAAM,CAAC,CAAC,CAAC,CAAC;IAC1B,OAAOJ,QAAQ,CAACK,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACd,MAAMA,KAAK;EACb;AACF,CAAC;AAED,OAAO,MAAMa,cAAc,GAAG,MAAAA,CAAA,KAAY;EACxC,IAAI;IACF,MAAMV,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAC3C,MAAMX,QAAQ,GAAG,MAAMJ,GAAG,CAACmB,GAAG,CAAC,gBAAgB,EAAE;MAC/CH,OAAO,EAAE;QACPC,aAAa,EAAE,UAAUJ,KAAK;MAChC;IACF,CAAC,CAAC;IACF,OAAOT,QAAQ,CAACK,IAAI,CAACe,KAAK;EAC5B,CAAC,CAAC,OAAOd,KAAK,EAAE;IACd,MAAMA,KAAK;EACb;AACF,CAAC;AAED,OAAO,MAAMe,oBAAoB,GAAG,MAAOC,EAAE,IAAK;EAChD,IAAI;IACF,MAAMb,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAC3C,MAAMX,QAAQ,GAAG,MAAMJ,GAAG,CAACmB,GAAG,CAAC,kBAAkBO,EAAE,EAAE,EAAE;MACrDV,OAAO,EAAE;QACPC,aAAa,EAAE,UAAUJ,KAAK;MAChC;IACF,CAAC,CAAC;IACF,OAAOT,QAAQ,CAACK,IAAI,CAACe,KAAK;EAC5B,CAAC,CAAC,OAAOd,KAAK,EAAE;IACd,MAAMA,KAAK;EACb;AACF,CAAC;AAED,OAAO,MAAMiB,eAAe,GAAG,MAAOC,QAAQ,IAAK;EACjD,IAAI;IACF,MAAMf,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAC3C,MAAMX,QAAQ,GAAG,MAAMJ,GAAG,CAACK,IAAI,CAAC,eAAe,EAAEuB,QAAQ,EAAE;MACzDZ,OAAO,EAAE;QACPC,aAAa,EAAE,UAAUJ,KAAK;MAChC;IACF,CAAC,CAAC;IACFP,MAAM,CAACC,QAAQ,CAACC,MAAM,CAAC,CAAC,CAAC,CAAC;IAC1B,OAAOJ,QAAQ,CAACK,IAAI,CAACe,KAAK;EAC5B,CAAC,CAAC,OAAOd,KAAK,EAAE;IACd,MAAMA,KAAK;EACb;AACF,CAAC;AAED,OAAO,MAAMmB,cAAc,GAAG,MAAAA,CAAOD,QAAQ,EAAGF,EAAE,KAAK;EACrD,IAAI;IACF,MAAMb,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAC3C,MAAMX,QAAQ,GAAG,MAAMJ,GAAG,CAACsB,GAAG,CAAC,iBAAiBI,EAAE,EAAE,EAAEE,QAAQ,EAAE;MAC9DZ,OAAO,EAAE;QACPC,aAAa,EAAE,UAAUJ,KAAK;MAChC;IACF,CAAC,CAAC;IACFP,MAAM,CAACC,QAAQ,CAACC,MAAM,CAAC,CAAC,CAAC,CAAC;IAC1B,OAAOJ,QAAQ,CAACK,IAAI,CAACe,KAAK;EAC5B,CAAC,CAAC,OAAOd,KAAK,EAAE;IACd,MAAMA,KAAK;EACb;AACF,CAAC;AAED,OAAO,MAAMoB,cAAc,GAAG,MAAOJ,EAAE,IAAK;EAC1C,IAAI;IACF,MAAMb,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAC3C,MAAMX,QAAQ,GAAG,MAAMJ,GAAG,CAAC+B,MAAM,CAAC,iBAAiBL,EAAE,EAAE,EAAE;MACvDV,OAAO,EAAE;QACPC,aAAa,EAAE,UAAUJ,KAAK;MAChC;IACF,CAAC,CAAC;IACFP,MAAM,CAACC,QAAQ,CAACC,MAAM,CAAC,CAAC,CAAC,CAAC;IAC1B,OAAOJ,QAAQ,CAACK,IAAI,CAACe,KAAK;EAC5B,CAAC,CAAC,OAAOd,KAAK,EAAE;IACd,MAAMA,KAAK;EACb;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}