{"ast":null,"code":"var _jsxFileName = \"C:\\\\react company\\\\To-do-list\\\\task-management-frontend\\\\src\\\\Components\\\\signUpForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { Dialog, DialogContent, DialogActions, Button, TextField, Grid } from \"@mui/material\";\nimport { useNavigate } from \"react-router-dom\";\nimport { registerUser } from \"../Services/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RegisterForm = () => {\n  _s();\n  const [formData, setFormData] = useState({\n    name: \"\",\n    email: \"\",\n    password: \"\",\n    confirmPassword: \"\",\n    birthdate: \"\"\n  });\n  const [open, setOpen] = useState(false);\n  const [dialogMessage, setDialogMessage] = useState(\"\"); // State for dialog message\n  const navigate = useNavigate();\n  const handleChange = e => {\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value\n    });\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const response = await registerUser(formData); // Use the registerUser function\n      setFormData({\n        name: \"\",\n        email: \"\",\n        password: \"\",\n        confirmPassword: \"\",\n        birthdate: \"\"\n      });\n      setDialogMessage(\"Registration Done Successfully!\"); // Success message\n      setOpen(true);\n      setTimeout(() => {\n        setOpen(false);\n        navigate(\"/\");\n      }, 3000); // Close dialog and navigate after 3 seconds\n    } catch (error) {\n      var _error$response, _error$response$data;\n      const errorMessage = ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || \"An error occurred\";\n      setDialogMessage(errorMessage); // Set error message from response\n      setOpen(true);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    spacing: 2,\n    justifyContent: \"center\",\n    style: {\n      marginTop: \"20px\"\n    },\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      md: 6,\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 2,\n          direction: \"column\",\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              label: \"Name\",\n              type: \"text\",\n              name: \"name\",\n              value: formData.name,\n              onChange: handleChange,\n              required: true,\n              fullWidth: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              label: \"Email\",\n              type: \"email\",\n              name: \"email\",\n              value: formData.email,\n              onChange: handleChange,\n              required: true,\n              fullWidth: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              label: \"Password\",\n              type: \"password\",\n              name: \"password\",\n              value: formData.password,\n              onChange: handleChange,\n              required: true,\n              fullWidth: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              label: \"Confirm Password\",\n              type: \"password\",\n              name: \"confirmPassword\",\n              value: formData.confirmPassword,\n              onChange: handleChange,\n              required: true,\n              fullWidth: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              label: \"Birthdate\",\n              type: \"date\",\n              name: \"birthdate\",\n              value: formData.birthdate,\n              onChange: handleChange,\n              required: true,\n              fullWidth: true,\n              InputLabelProps: {\n                shrink: true\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              type: \"submit\",\n              variant: \"contained\",\n              color: \"primary\",\n              fullWidth: true,\n              children: \"Register\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n        open: open,\n        onClose: handleClose,\n        children: [/*#__PURE__*/_jsxDEV(DialogContent, {\n          children: dialogMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            onClick: handleClose,\n            color: \"secondary\",\n            children: \"Close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n_s(RegisterForm, \"1+SWBwrP6CNV4PFonjiREldAT88=\", false, function () {\n  return [useNavigate];\n});\n_c = RegisterForm;\nexport default RegisterForm;\nvar _c;\n$RefreshReg$(_c, \"RegisterForm\");","map":{"version":3,"names":["React","useState","Dialog","DialogContent","DialogActions","Button","TextField","Grid","useNavigate","registerUser","jsxDEV","_jsxDEV","RegisterForm","_s","formData","setFormData","name","email","password","confirmPassword","birthdate","open","setOpen","dialogMessage","setDialogMessage","navigate","handleChange","e","target","value","handleClose","handleSubmit","preventDefault","response","setTimeout","error","_error$response","_error$response$data","errorMessage","data","message","container","spacing","justifyContent","style","marginTop","children","item","xs","md","onSubmit","direction","label","type","onChange","required","fullWidth","fileName","_jsxFileName","lineNumber","columnNumber","InputLabelProps","shrink","variant","color","onClose","onClick","_c","$RefreshReg$"],"sources":["C:/react company/To-do-list/task-management-frontend/src/Components/signUpForm.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { Dialog, DialogContent, DialogActions, Button, TextField, Grid } from \"@mui/material\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { registerUser } from \"../Services/api\";\r\n\r\nconst RegisterForm = () => {\r\n  const [formData, setFormData] = useState({\r\n    name: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    confirmPassword: \"\",\r\n    birthdate: \"\",\r\n  });\r\n  const [open, setOpen] = useState(false);\r\n  const [dialogMessage, setDialogMessage] = useState(\"\"); // State for dialog message\r\n  const navigate = useNavigate();\r\n\r\n  const handleChange = (e) => {\r\n    setFormData({\r\n      ...formData,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const response = await registerUser(formData); // Use the registerUser function\r\n      setFormData({\r\n        name: \"\",\r\n        email: \"\",\r\n        password: \"\",\r\n        confirmPassword: \"\",\r\n        birthdate: \"\",\r\n      });\r\n      setDialogMessage(\"Registration Done Successfully!\"); // Success message\r\n      setOpen(true);\r\n      setTimeout(() => {\r\n        setOpen(false);\r\n        navigate(\"/\"); \r\n      }, 3000); // Close dialog and navigate after 3 seconds\r\n    } catch (error) {\r\n      const errorMessage = error.response?.data?.message || \"An error occurred\";\r\n      setDialogMessage(errorMessage); // Set error message from response\r\n      setOpen(true);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Grid container spacing={2} justifyContent=\"center\" style={{ marginTop: \"20px\" }} >\r\n      <Grid item xs={12} md={6}>\r\n        <form onSubmit={handleSubmit}>\r\n          <Grid container spacing={2} direction=\"column\">\r\n            <Grid item>\r\n              <TextField\r\n                label=\"Name\"\r\n                type=\"text\"\r\n                name=\"name\"\r\n                value={formData.name}\r\n                onChange={handleChange}\r\n                required\r\n                fullWidth\r\n              />\r\n            </Grid>\r\n            <Grid item>\r\n              <TextField\r\n                label=\"Email\"\r\n                type=\"email\"\r\n                name=\"email\"\r\n                value={formData.email}\r\n                onChange={handleChange}\r\n                required\r\n                fullWidth\r\n              />\r\n            </Grid>\r\n            <Grid item>\r\n              <TextField\r\n                label=\"Password\"\r\n                type=\"password\"\r\n                name=\"password\"\r\n                value={formData.password}\r\n                onChange={handleChange}\r\n                required\r\n                fullWidth\r\n              />\r\n            </Grid>\r\n            <Grid item>\r\n              <TextField\r\n                label=\"Confirm Password\"\r\n                type=\"password\"\r\n                name=\"confirmPassword\"\r\n                value={formData.confirmPassword}\r\n                onChange={handleChange}\r\n                required\r\n                fullWidth\r\n              />\r\n            </Grid>\r\n            <Grid item>\r\n              <TextField\r\n                label=\"Birthdate\"\r\n                type=\"date\"\r\n                name=\"birthdate\"\r\n                value={formData.birthdate}\r\n                onChange={handleChange}\r\n                required\r\n                fullWidth\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n              />\r\n            </Grid>\r\n            <Grid item>\r\n              <Button type=\"submit\" variant=\"contained\" color=\"primary\" fullWidth>\r\n                Register\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n\r\n        {/* Dialog box for showing registration success or error */}\r\n        <Dialog open={open} onClose={handleClose}>\r\n          <DialogContent>{dialogMessage}</DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={handleClose} color=\"secondary\">\r\n              Close\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default RegisterForm;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}