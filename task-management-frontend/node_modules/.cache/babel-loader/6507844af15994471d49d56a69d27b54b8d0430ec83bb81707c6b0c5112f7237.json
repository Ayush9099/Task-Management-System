{"ast":null,"code":"var _jsxFileName = \"C:\\\\react company\\\\To-do-list\\\\task-management-frontend\\\\src\\\\Components\\\\taskDetails.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { Typography, Box } from \"@mui/material\";\nimport { fetchUserSingleTasks } from \"../Services/api\"; // Adjust import based on your API service function\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskDetails = ({\n  useParams\n}) => {\n  _s();\n  const {\n    id\n  } = useParams;\n  const [task, setTask] = useState(null);\n  useEffect(() => {\n    const fetchTask = async () => {\n      try {\n        const data = await fetchUserSingleTasks(id);\n        setTask(data);\n      } catch (error) {\n        console.error(\"Error fetching task details:\", error);\n      }\n    };\n    fetchTask();\n  }, [id]);\n  if (!task) {\n    return /*#__PURE__*/_jsxDEV(Typography, {\n      children: \"Loading task details...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Box, {\n    mt: 4,\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      children: task.Title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"subtitle1\",\n      children: [\"Created At: \", new Date(task.createdAt).toLocaleString()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"body1\",\n      children: task.Description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n_s(TaskDetails, \"HbcssAxLTHWqCRHO839ApGabvjg=\");\n_c = TaskDetails;\nexport default _c2 = withRouter(TaskDetails);\nvar _c, _c2;\n$RefreshReg$(_c, \"TaskDetails\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"names":["React","useEffect","useState","useParams","Typography","Box","fetchUserSingleTasks","jsxDEV","_jsxDEV","TaskDetails","_s","id","task","setTask","fetchTask","data","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","mt","variant","Title","Date","createdAt","toLocaleString","Description","_c","_c2","withRouter","$RefreshReg$"],"sources":["C:/react company/To-do-list/task-management-frontend/src/Components/taskDetails.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { Typography, Box } from \"@mui/material\";\r\nimport { fetchUserSingleTasks } from \"../Services/api\"; // Adjust import based on your API service function\r\n\r\nconst TaskDetails = ({ useParams }) => {\r\n  const { id } = useParams;\r\n  const [task, setTask] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchTask = async () => {\r\n      try {\r\n        const data = await fetchUserSingleTasks(id);\r\n        setTask(data);\r\n      } catch (error) {\r\n        console.error(\"Error fetching task details:\", error);\r\n      }\r\n    };\r\n\r\n    fetchTask();\r\n  }, [id]);\r\n\r\n  if (!task) {\r\n    return <Typography>Loading task details...</Typography>;\r\n  }\r\n\r\n  return (\r\n    <Box mt={4}>\r\n      <Typography variant=\"h4\">{task.Title}</Typography>\r\n      <Typography variant=\"subtitle1\">\r\n        Created At: {new Date(task.createdAt).toLocaleString()}\r\n      </Typography>\r\n      <Typography variant=\"body1\">{task.Description}</Typography>\r\n      {/* Display other task details as needed */}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default withRouter(TaskDetails);\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,SAASC,UAAU,EAAEC,GAAG,QAAQ,eAAe;AAC/C,SAASC,oBAAoB,QAAQ,iBAAiB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAExD,MAAMC,WAAW,GAAGA,CAAC;EAAEN;AAAU,CAAC,KAAK;EAAAO,EAAA;EACrC,MAAM;IAAEC;EAAG,CAAC,GAAGR,SAAS;EACxB,MAAM,CAACS,IAAI,EAAEC,OAAO,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAEtCD,SAAS,CAAC,MAAM;IACd,MAAMa,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACF,MAAMC,IAAI,GAAG,MAAMT,oBAAoB,CAACK,EAAE,CAAC;QAC3CE,OAAO,CAACE,IAAI,CAAC;MACf,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;MACtD;IACF,CAAC;IAEDF,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,CAACH,EAAE,CAAC,CAAC;EAER,IAAI,CAACC,IAAI,EAAE;IACT,oBAAOJ,OAAA,CAACJ,UAAU;MAAAc,QAAA,EAAC;IAAuB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAY,CAAC;EACzD;EAEA,oBACEd,OAAA,CAACH,GAAG;IAACkB,EAAE,EAAE,CAAE;IAAAL,QAAA,gBACTV,OAAA,CAACJ,UAAU;MAACoB,OAAO,EAAC,IAAI;MAAAN,QAAA,EAAEN,IAAI,CAACa;IAAK;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAa,CAAC,eAClDd,OAAA,CAACJ,UAAU;MAACoB,OAAO,EAAC,WAAW;MAAAN,QAAA,GAAC,cAClB,EAAC,IAAIQ,IAAI,CAACd,IAAI,CAACe,SAAS,CAAC,CAACC,cAAc,CAAC,CAAC;IAAA;MAAAT,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5C,CAAC,eACbd,OAAA,CAACJ,UAAU;MAACoB,OAAO,EAAC,OAAO;MAAAN,QAAA,EAAEN,IAAI,CAACiB;IAAW;MAAAV,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAa,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAExD,CAAC;AAEV,CAAC;AAACZ,EAAA,CA/BID,WAAW;AAAAqB,EAAA,GAAXrB,WAAW;AAiCjB,eAAAsB,GAAA,GAAeC,UAAU,CAACvB,WAAW,CAAC;AAAC,IAAAqB,EAAA,EAAAC,GAAA;AAAAE,YAAA,CAAAH,EAAA;AAAAG,YAAA,CAAAF,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}