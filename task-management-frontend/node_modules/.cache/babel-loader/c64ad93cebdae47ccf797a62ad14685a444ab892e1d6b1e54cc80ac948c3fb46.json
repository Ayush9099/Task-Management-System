{"ast":null,"code":"var _jsxFileName = \"C:\\\\react company\\\\To-do-list\\\\task-management-frontend\\\\src\\\\Components\\\\taskList.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Typography, List, ListItem, ListItemText, ListItemSecondaryAction, IconButton } from \"@mui/material\";\nimport { fetchUserTasks } from \"../Services/api\"; // Adjust this import based on your API service function\nimport TaskDetailsDialog from \"./taskDetails\"; // Import the TaskDetailsDialog component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskList = () => {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const [openDialog, setOpenDialog] = useState(false);\n  const [selectedTask, setSelectedTask] = useState(null); // State to hold the selected task details\n\n  useEffect(() => {\n    const fetchTaskList = async () => {\n      try {\n        const data = await fetchUserTasks();\n        setTasks(data);\n      } catch (error) {\n        console.error(\"Error fetching tasks:\", error);\n      }\n    };\n    fetchTaskList();\n  }, []);\n  const handleOpenDialog = task => {\n    setSelectedTask(task);\n    setOpenDialog(true);\n  };\n  const handleCloseDialog = () => {\n    setOpenDialog(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(List, {\n      children: tasks.map(task => /*#__PURE__*/_jsxDEV(ListItem, {\n        button: true,\n        onClick: () => handleOpenDialog(task) // Open dialog when a task is clicked\n        ,\n        component: Link,\n        to: `/task/${task._id}`,\n        style: {\n          textDecoration: \"none\",\n          color: \"inherit\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(ListItemText, {\n          primary: task.Title,\n          secondary: `Created At: ${new Date(task.createdAt).toLocaleString()}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ListItemSecondaryAction, {\n          children: /*#__PURE__*/_jsxDEV(IconButton, {\n            edge: \"end\",\n            \"aria-label\": \"view-task-details\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, this)]\n      }, task._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), selectedTask && /*#__PURE__*/_jsxDEV(TaskDetailsDialog, {\n      taskDetails: selectedTask,\n      open: openDialog,\n      onClose: handleCloseDialog,\n      onModify: () => {\n        // Handle modify task action\n        // For example, navigate to modify task page\n        console.log(\"Modify task clicked\");\n        setOpenDialog(false); // Close dialog after modify action\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n_s(TaskList, \"79XRgWiLlYAR8HCSKRkavzVeivA=\");\n_c = TaskList;\nexport default TaskList;\nvar _c;\n$RefreshReg$(_c, \"TaskList\");","map":{"version":3,"names":["React","useEffect","useState","Link","Typography","List","ListItem","ListItemText","ListItemSecondaryAction","IconButton","fetchUserTasks","TaskDetailsDialog","jsxDEV","_jsxDEV","TaskList","_s","tasks","setTasks","openDialog","setOpenDialog","selectedTask","setSelectedTask","fetchTaskList","data","error","console","handleOpenDialog","task","handleCloseDialog","children","map","button","onClick","component","to","_id","style","textDecoration","color","primary","Title","secondary","Date","createdAt","toLocaleString","fileName","_jsxFileName","lineNumber","columnNumber","edge","taskDetails","open","onClose","onModify","log","_c","$RefreshReg$"],"sources":["C:/react company/To-do-list/task-management-frontend/src/Components/taskList.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  Typography,\r\n  List,\r\n  ListItem,\r\n  ListItemText,\r\n  ListItemSecondaryAction,\r\n  IconButton,\r\n} from \"@mui/material\";\r\nimport { fetchUserTasks } from \"../Services/api\"; // Adjust this import based on your API service function\r\nimport TaskDetailsDialog from \"./taskDetails\"; // Import the TaskDetailsDialog component\r\n\r\nconst TaskList = () => {\r\n  const [tasks, setTasks] = useState([]);\r\n  const [openDialog, setOpenDialog] = useState(false);\r\n  const [selectedTask, setSelectedTask] = useState(null); // State to hold the selected task details\r\n\r\n  useEffect(() => {\r\n    const fetchTaskList = async () => {\r\n      try {\r\n        const data = await fetchUserTasks();\r\n        setTasks(data);\r\n      } catch (error) {\r\n        console.error(\"Error fetching tasks:\", error);\r\n      }\r\n    };\r\n\r\n    fetchTaskList();\r\n  }, []);\r\n\r\n  const handleOpenDialog = (task) => {\r\n    setSelectedTask(task);\r\n    setOpenDialog(true);\r\n  };\r\n\r\n  const handleCloseDialog = () => {\r\n    setOpenDialog(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <List>\r\n        {tasks.map((task) => (\r\n          <ListItem\r\n            key={task._id}\r\n            button\r\n            onClick={() => handleOpenDialog(task)} // Open dialog when a task is clicked\r\n            component={Link}\r\n            to={`/task/${task._id}`}\r\n            style={{ textDecoration: \"none\", color: \"inherit\" }}\r\n          >\r\n            <ListItemText\r\n              primary={task.Title}\r\n              secondary={`Created At: ${new Date(\r\n                task.createdAt\r\n              ).toLocaleString()}`}\r\n            />\r\n            {/* Add an icon button or any action you want to perform */}\r\n            <ListItemSecondaryAction>\r\n              <IconButton edge=\"end\" aria-label=\"view-task-details\">\r\n                {/* Add an icon here if needed */}\r\n              </IconButton>\r\n            </ListItemSecondaryAction>\r\n          </ListItem>\r\n        ))}\r\n      </List>\r\n\r\n      {/* Task Details Dialog */}\r\n      {selectedTask && (\r\n        <TaskDetailsDialog\r\n          taskDetails={selectedTask}\r\n          open={openDialog}\r\n          onClose={handleCloseDialog}\r\n          onModify={() => {\r\n            // Handle modify task action\r\n            // For example, navigate to modify task page\r\n            console.log(\"Modify task clicked\");\r\n            setOpenDialog(false); // Close dialog after modify action\r\n          }}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TaskList;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}