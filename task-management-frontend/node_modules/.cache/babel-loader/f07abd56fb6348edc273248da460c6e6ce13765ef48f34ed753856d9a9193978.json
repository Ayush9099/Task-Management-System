{"ast":null,"code":"var _jsxFileName = \"C:\\\\react company\\\\To-do-list\\\\task-management-frontend\\\\src\\\\Components\\\\taskList.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Typography, List, ListItem, ListItemText, ListItemSecondaryAction, IconButton } from \"@mui/material\";\nimport { fetchUserTasks } from \"../Services/api\"; // Adjust this import based on your API service function\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskList = () => {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  useEffect(() => {\n    const fetchTaskList = async () => {\n      try {\n        const data = await fetchUserTasks();\n        setTasks(data);\n      } catch (error) {\n        console.error(\"Error fetching tasks:\", error);\n      }\n    };\n    fetchTaskList();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(List, {\n      children: tasks.map(task => /*#__PURE__*/_jsxDEV(ListItem, {\n        button: true,\n        component: Link,\n        to: `/task/${task._id}`,\n        style: {\n          textDecoration: \"none\",\n          color: \"inherit\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(ListItemText, {\n          primary: task.Title,\n          secondary: `Created At: ${new Date(task.createdAt).toLocaleString()}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ListItemSecondaryAction, {\n          children: /*#__PURE__*/_jsxDEV(IconButton, {\n            edge: \"end\",\n            \"aria-label\": \"view-task-details\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this)]\n      }, task._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n_s(TaskList, \"bBd6yqkqV9dlkj9ENgRyXKaiXpk=\");\n_c = TaskList;\nexport default TaskList;\nvar _c;\n$RefreshReg$(_c, \"TaskList\");","map":{"version":3,"names":["React","useEffect","useState","Link","Typography","List","ListItem","ListItemText","ListItemSecondaryAction","IconButton","fetchUserTasks","jsxDEV","_jsxDEV","TaskList","_s","tasks","setTasks","fetchTaskList","data","error","console","children","map","task","button","component","to","_id","style","textDecoration","color","primary","Title","secondary","Date","createdAt","toLocaleString","fileName","_jsxFileName","lineNumber","columnNumber","edge","_c","$RefreshReg$"],"sources":["C:/react company/To-do-list/task-management-frontend/src/Components/taskList.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  Typography,\r\n  List,\r\n  ListItem,\r\n  ListItemText,\r\n  ListItemSecondaryAction,\r\n  IconButton,\r\n} from \"@mui/material\";\r\nimport { fetchUserTasks } from \"../Services/api\"; // Adjust this import based on your API service function\r\n\r\nconst TaskList = () => {\r\n  const [tasks, setTasks] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchTaskList = async () => {\r\n      try {\r\n        const data = await fetchUserTasks();\r\n        setTasks(data);\r\n      } catch (error) {\r\n        console.error(\"Error fetching tasks:\", error);\r\n      }\r\n    };\r\n\r\n    fetchTaskList();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <List>\r\n        {tasks.map((task) => (\r\n          <ListItem\r\n            key={task._id}\r\n            button\r\n            component={Link}\r\n            to={`/task/${task._id}`}\r\n            style={{ textDecoration: \"none\", color: \"inherit\" }}\r\n          >\r\n            <ListItemText\r\n              primary={task.Title}\r\n              secondary={`Created At: ${new Date(\r\n                task.createdAt\r\n              ).toLocaleString()}`}\r\n            />\r\n            {/* Add an icon button or any action you want to perform */}\r\n            <ListItemSecondaryAction>\r\n              <IconButton edge=\"end\" aria-label=\"view-task-details\">\r\n                {/* Add an icon here if needed */}\r\n              </IconButton>\r\n            </ListItemSecondaryAction>\r\n          </ListItem>\r\n        ))}\r\n      </List>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TaskList;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,IAAI,QAAQ,kBAAkB;AACvC,SACEC,UAAU,EACVC,IAAI,EACJC,QAAQ,EACRC,YAAY,EACZC,uBAAuB,EACvBC,UAAU,QACL,eAAe;AACtB,SAASC,cAAc,QAAQ,iBAAiB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAElD,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAEtCD,SAAS,CAAC,MAAM;IACd,MAAMgB,aAAa,GAAG,MAAAA,CAAA,KAAY;MAChC,IAAI;QACF,MAAMC,IAAI,GAAG,MAAMR,cAAc,CAAC,CAAC;QACnCM,QAAQ,CAACE,IAAI,CAAC;MAChB,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MAC/C;IACF,CAAC;IAEDF,aAAa,CAAC,CAAC;EACjB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEL,OAAA;IAAAS,QAAA,eACET,OAAA,CAACP,IAAI;MAAAgB,QAAA,EACFN,KAAK,CAACO,GAAG,CAAEC,IAAI,iBACdX,OAAA,CAACN,QAAQ;QAEPkB,MAAM;QACNC,SAAS,EAAEtB,IAAK;QAChBuB,EAAE,EAAE,SAASH,IAAI,CAACI,GAAG,EAAG;QACxBC,KAAK,EAAE;UAAEC,cAAc,EAAE,MAAM;UAAEC,KAAK,EAAE;QAAU,CAAE;QAAAT,QAAA,gBAEpDT,OAAA,CAACL,YAAY;UACXwB,OAAO,EAAER,IAAI,CAACS,KAAM;UACpBC,SAAS,EAAE,eAAe,IAAIC,IAAI,CAChCX,IAAI,CAACY,SACP,CAAC,CAACC,cAAc,CAAC,CAAC;QAAG;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACtB,CAAC,eAEF5B,OAAA,CAACJ,uBAAuB;UAAAa,QAAA,eACtBT,OAAA,CAACH,UAAU;YAACgC,IAAI,EAAC,KAAK;YAAC,cAAW;UAAmB;YAAAJ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAEzC;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACU,CAAC;MAAA,GAjBrBjB,IAAI,CAACI,GAAG;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAkBL,CACX;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV,CAAC;AAAC1B,EAAA,CA5CID,QAAQ;AAAA6B,EAAA,GAAR7B,QAAQ;AA8Cd,eAAeA,QAAQ;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}